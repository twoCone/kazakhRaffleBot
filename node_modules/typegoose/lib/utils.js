"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose = require("mongoose");
const data_1 = require("./data");
function isPrimitive(Type) {
    return ['String', 'Number', 'Boolean', 'Date', 'Decimal128', 'ObjectID'].includes(Type.name);
}
exports.isPrimitive = isPrimitive;
function isObject(Type) {
    let prototype = Type.prototype;
    let name = Type.name;
    while (name) {
        if (name === 'Object') {
            return true;
        }
        prototype = Object.getPrototypeOf(prototype);
        name = prototype ? prototype.constructor.name : null;
    }
    return false;
}
exports.isObject = isObject;
function isNumber(Type) {
    return Type.name === 'Number';
}
exports.isNumber = isNumber;
function isString(Type) {
    return Type.name === 'String';
}
exports.isString = isString;
function initAsObject(name, key) {
    if (!data_1.schema[name]) {
        data_1.schema[name] = {};
    }
    if (!data_1.schema[name][key]) {
        data_1.schema[name][key] = {};
    }
}
exports.initAsObject = initAsObject;
function initAsArray(name, key) {
    if (!data_1.schema[name]) {
        data_1.schema[name] = {};
    }
    if (!data_1.schema[name][key]) {
        data_1.schema[name][key] = [{}];
    }
}
exports.initAsArray = initAsArray;
function getClassForDocument(document) {
    const modelName = document.constructor.modelName;
    return data_1.constructors[modelName];
}
exports.getClassForDocument = getClassForDocument;
function isDocument(doc) {
    return doc instanceof mongoose.Model;
}
exports.isDocument = isDocument;
function isDocumentArray(docs) {
    return Array.isArray(docs) && docs.every(v => isDocument(v));
}
exports.isDocumentArray = isDocumentArray;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBcUM7QUFFckMsaUNBQThDO0FBUzlDLFNBQWdCLFdBQVcsQ0FBQyxJQUFTO0lBQ25DLE9BQU8sQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFVBQVUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDL0YsQ0FBQztBQUZELGtDQUVDO0FBT0QsU0FBZ0IsUUFBUSxDQUFDLElBQVM7SUFDaEMsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMvQixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3JCLE9BQU8sSUFBSSxFQUFFO1FBQ1gsSUFBSSxJQUFJLEtBQUssUUFBUSxFQUFFO1lBQ3JCLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxTQUFTLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM3QyxJQUFJLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0tBQ3REO0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDO0FBWkQsNEJBWUM7QUFPRCxTQUFnQixRQUFRLENBQUMsSUFBUztJQUNoQyxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssUUFBUSxDQUFDO0FBQ2hDLENBQUM7QUFGRCw0QkFFQztBQU9ELFNBQWdCLFFBQVEsQ0FBQyxJQUFTO0lBQ2hDLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxRQUFRLENBQUM7QUFDaEMsQ0FBQztBQUZELDRCQUVDO0FBT0QsU0FBZ0IsWUFBWSxDQUFDLElBQUksRUFBRSxHQUFHO0lBQ3BDLElBQUksQ0FBQyxhQUFNLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDakIsYUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUNuQjtJQUNELElBQUksQ0FBQyxhQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDdEIsYUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUN4QjtBQUNILENBQUM7QUFQRCxvQ0FPQztBQU9ELFNBQWdCLFdBQVcsQ0FBQyxJQUFTLEVBQUUsR0FBUTtJQUM3QyxJQUFJLENBQUMsYUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ2pCLGFBQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7S0FDbkI7SUFDRCxJQUFJLENBQUMsYUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ3RCLGFBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQzFCO0FBQ0gsQ0FBQztBQVBELGtDQU9DO0FBTUQsU0FBZ0IsbUJBQW1CLENBQUMsUUFBMkI7SUFDN0QsTUFBTSxTQUFTLEdBQUksUUFBUSxDQUFDLFdBQStDLENBQUMsU0FBUyxDQUFDO0lBQ3RGLE9BQU8sbUJBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNqQyxDQUFDO0FBSEQsa0RBR0M7QUFNRCxTQUFnQixVQUFVLENBQUksR0FBVztJQUN2QyxPQUFPLEdBQUcsWUFBWSxRQUFRLENBQUMsS0FBSyxDQUFDO0FBQ3ZDLENBQUM7QUFGRCxnQ0FFQztBQU1ELFNBQWdCLGVBQWUsQ0FBSSxJQUFjO0lBQy9DLE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0QsQ0FBQztBQUZELDBDQUVDIn0=